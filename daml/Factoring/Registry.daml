module Factoring.Registry where

import DA.List

data FactoringRole = BuyerRole | SellerRole | ExchangeRole | CSDRole deriving (Show,Eq)

template RegisteredUser
  with
    operator : Party
    public : Party
    user : Party
    isPublic : Bool
    firstName : Text
    lastName : Text
    email : Text
    company : Text
    roles : [FactoringRole]
  where
    signatory operator, user
    observer if isPublic then [public] else []
    key (operator, user) : (Party, Party)
    maintainer key._2

    controller user can
      RegisteredUser_UpdateProfile : ContractId RegisteredUser
        with
          newFirstName : Text
          newLastName : Text
          newEmail : Text
          newCompany : Text
        do
          create this with
            firstName = newFirstName
            lastName = newLastName
            email = newEmail
            company = newCompany

    controller operator can
      RegisteredUser_AddRole : ContractId RegisteredUser
        with
          newRole : FactoringRole
        do
          create this with roles = if newRole `elem` roles then roles else newRole :: roles

      RegisteredUser_RemoveRole : ContractId RegisteredUser
        with
          role : FactoringRole
        do
          create this with roles = delete role roles


template RegisteredBuyer
  with
    operator : Party
    public : Party
    buyer : Party
    firstName : Text
    lastName : Text
    email : Text
    company : Text
    isPublic : Bool
  where
    signatory operator, buyer
    observer if isPublic then [public] else []

    key (operator, buyer) : (Party, Party)
    maintainer key._2

    controller buyer can
      RegisteredBuyer_UpdateProfile : ContractId RegisteredBuyer
        with
          newFirstName : Text
          newLastName : Text
          newEmail : Text
          newCompany : Text
        do
          create this with
              firstName = newFirstName
              lastName = newLastName
              email = newEmail
              company = newCompany

    controller operator can
      RegisteredBuyer_Offboard : ()
        do return ()

template RegisteredSeller
  with
    operator : Party
    public : Party
    seller : Party
    firstName : Text
    lastName : Text
    email : Text
    company : Text
    isPublic : Bool
  where
    signatory operator, seller
    observer if isPublic then [public] else []

    key (operator, seller) : (Party, Party)
    maintainer key._2

    controller seller can
      RegisteredSeller_UpdateProfile : ContractId RegisteredSeller
        with
          newFirstName : Text
          newLastName : Text
          newEmail : Text
          newCompany : Text
        do
          create this with
              firstName = newFirstName
              lastName = newLastName
              email = newEmail
              company = newCompany

    controller operator can
      RegisteredSeller_Offboard : ()
        do return ()
